/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
    "/admin/users/{userId}/role": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    userId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        role: "user" | "admin" | "super_admin";
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                /** Format: uuid */
                                id: string;
                                /** Format: email */
                                email: string;
                                display_name: string | null;
                                role: "user" | "admin" | "super_admin";
                                active: boolean;
                                /** Format: date-time */
                                created_at: string;
                                /** Format: date-time */
                                updated_at: string;
                                stripe_customer_id: string | null;
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
                /** @description Error response format */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
                /** @description Error response format */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
                /** @description Error response format */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/admin/users/{userId}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    userId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        active: boolean;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                /** Format: uuid */
                                id: string;
                                /** Format: email */
                                email: string;
                                display_name: string | null;
                                role: "user" | "admin" | "super_admin";
                                active: boolean;
                                /** Format: date-time */
                                created_at: string;
                                /** Format: date-time */
                                updated_at: string;
                                stripe_customer_id: string | null;
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
                /** @description Error response format */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
                /** @description Error response format */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
                /** @description Error response format */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/admin/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    page?: number;
                    limit?: number;
                    role?: "user" | "admin" | "super_admin";
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                /** Format: uuid */
                                id: string;
                                /** Format: email */
                                email: string;
                                display_name: string | null;
                                role: "user" | "admin" | "super_admin";
                                active: boolean;
                                /** Format: date-time */
                                created_at: string;
                                /** Format: date-time */
                                updated_at: string;
                                stripe_customer_id: string | null;
                            }[];
                            pagination: {
                                page: number;
                                limit: number;
                                total: number;
                                totalPages: number;
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
                /** @description Error response format */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/forgot-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: email */
                        email: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: null;
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/google": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description Google ID token credential returned by Google Identity Services */
                        credential: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                user: {
                                    id: string;
                                    email: string;
                                    display_name?: string;
                                };
                                /** @description JWT token for API authentication (mirrors login/signup) */
                                token: string;
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: email */
                        email: string;
                        password: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                user: {
                                    id: string;
                                    email: string;
                                    display_name?: string;
                                };
                                /** @description JWT token for API authentication (use this for mobile apps) */
                                token: string;
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: null;
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                user: {
                                    id: string;
                                    email: string;
                                    display_name?: string;
                                } & {
                                    subscription?: {
                                        stripe_price_id: string;
                                        status: "incomplete" | "incomplete_expired" | "trialing" | "active" | "past_due" | "canceled" | "unpaid" | "paused";
                                        stripe_product_id: string;
                                        /** Format: date-time */
                                        current_period_start?: string;
                                        /** Format: date-time */
                                        current_period_end?: string;
                                        cancel_at_period_end: boolean;
                                        price_name?: string;
                                        product_name?: string;
                                        amount?: number;
                                        currency?: string;
                                        interval?: string;
                                    };
                                };
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/reset-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        token: string;
                        newPassword: string;
                        confirmPassword: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: null;
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: email */
                        email: string;
                        password: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                user: {
                                    id: string;
                                    email: string;
                                    display_name?: string;
                                };
                                /** @description JWT token for API authentication (use this for mobile apps) */
                                token: string;
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/update-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        currentPassword: string;
                        newPassword: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: null;
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/billing/billing-portal": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                url?: string;
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/billing/checkout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    session_id: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                status: "complete" | "pending" | "failed";
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query: {
                    priceId: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                url?: string;
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/billing/plans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: string;
                                stripe_product_id: string;
                                stripe_price_id: string;
                                price_code: string | null;
                                price_name: string | null;
                                product_code: string | null;
                                product_name: string | null;
                                amount: number | null;
                                currency: string | null;
                                interval: string | null;
                                active: boolean;
                            }[];
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notes/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    page?: number;
                    limit?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: string;
                                title: string | null;
                                content: string | null;
                                createdAt: string;
                                updatedAt: string;
                            }[];
                            pagination: {
                                page: number;
                                limit: number;
                                total: number;
                                totalPages: number;
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        title?: string;
                        content?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: string;
                                title: string | null;
                                content: string | null;
                                createdAt: string;
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notes/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: string;
                                title: string | null;
                                content: string | null;
                                createdAt: string;
                                updatedAt: string;
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: null;
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        title?: string;
                        content?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                id: string;
                                title: string | null;
                                content: string | null;
                                updatedAt: string;
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/stripe/webhook": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: true;
                            data: {
                                received: boolean;
                            };
                            message?: string;
                        };
                    };
                };
                /** @description Error response format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            success: false;
                            /**
                             * @description Human-readable error message
                             * @example User already exists
                             */
                            error: string;
                            /**
                             * @description Machine-readable error code for programmatic handling
                             * @example USER_EXISTS
                             */
                            code?: string;
                            /** @description Additional error context (structure varies by error type) */
                            details?: {
                                /** @description Array of validation errors if present */
                                errors?: {
                                    /**
                                     * @description Field name that failed validation
                                     * @example email
                                     */
                                    field: string;
                                    /**
                                     * @description Human-readable error message
                                     * @example Invalid format
                                     */
                                    message: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
};
export type webhooks = Record<string, never>;
export type components = {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
};
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
