/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type StripeSubscriptionStatus = "active" | "canceled" | "incomplete" | "incomplete_expired" | "past_due" | "paused" | "trialing" | "unpaid";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export type UserRole = "admin" | "super_admin" | "user";

export interface Notes {
  content: string | null;
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  title: string | null;
  updated_at: Generated<Timestamp>;
  user_id: string;
}

export interface PasswordResetTokens {
  created_at: Generated<Timestamp>;
  expires_at: Timestamp;
  id: Generated<string>;
  token_hash: string;
  used: Generated<boolean>;
  used_at: Timestamp | null;
  user_id: string;
}

export interface SchemaMigrations {
  version: string;
}

export interface StripePrices {
  active: Generated<boolean>;
  amount: number | null;
  created_at: Generated<Timestamp>;
  currency: string | null;
  id: Generated<string>;
  interval: string | null;
  price_code: string | null;
  price_name: string | null;
  product_code: string | null;
  product_name: string | null;
  stripe_price_id: string;
  stripe_product_id: string;
  updated_at: Generated<Timestamp>;
}

export interface StripeSubscriptions {
  cancel_at_period_end: Generated<boolean>;
  created_at: Generated<Timestamp>;
  current_period_end: Timestamp | null;
  current_period_start: Timestamp | null;
  id: Generated<string>;
  status: StripeSubscriptionStatus;
  stripe_price_id: string;
  stripe_product_id: string;
  stripe_subscription_id: string;
  updated_at: Generated<Timestamp>;
  user_id: string;
}

export interface StripeWebhookEvents {
  created_at: Generated<Timestamp>;
  event_type: string;
  id: Generated<string>;
  payload: Json;
  processed_at: Timestamp | null;
  stripe_event_id: string;
}

export interface UserProviders {
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  provider: string;
  provider_user_id: string;
  user_id: string;
}

export interface Users {
  active: Generated<boolean>;
  created_at: Generated<Timestamp>;
  display_name: string | null;
  email: string;
  id: Generated<string>;
  password_hash: string | null;
  role: Generated<UserRole>;
  stripe_customer_id: string | null;
  updated_at: Generated<Timestamp>;
}

export interface DB {
  notes: Notes;
  password_reset_tokens: PasswordResetTokens;
  schema_migrations: SchemaMigrations;
  stripe_prices: StripePrices;
  stripe_subscriptions: StripeSubscriptions;
  stripe_webhook_events: StripeWebhookEvents;
  user_providers: UserProviders;
  users: Users;
}
