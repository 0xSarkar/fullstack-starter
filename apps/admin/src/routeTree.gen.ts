/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthLayoutRouteImport } from './routes/_authLayout'
import { Route as AppLayoutRouteImport } from './routes/_appLayout'
import { Route as AppLayoutIndexRouteImport } from './routes/_appLayout/index'
import { Route as AuthLayoutLoginRouteImport } from './routes/_authLayout/login'
import { Route as AppLayoutUsersRouteImport } from './routes/_appLayout/users'

const AuthLayoutRoute = AuthLayoutRouteImport.update({
  id: '/_authLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const AppLayoutRoute = AppLayoutRouteImport.update({
  id: '/_appLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const AppLayoutIndexRoute = AppLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AuthLayoutLoginRoute = AuthLayoutLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthLayoutRoute,
} as any)
const AppLayoutUsersRoute = AppLayoutUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AppLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/users': typeof AppLayoutUsersRoute
  '/login': typeof AuthLayoutLoginRoute
  '/': typeof AppLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/users': typeof AppLayoutUsersRoute
  '/login': typeof AuthLayoutLoginRoute
  '/': typeof AppLayoutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_appLayout': typeof AppLayoutRouteWithChildren
  '/_authLayout': typeof AuthLayoutRouteWithChildren
  '/_appLayout/users': typeof AppLayoutUsersRoute
  '/_authLayout/login': typeof AuthLayoutLoginRoute
  '/_appLayout/': typeof AppLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/users' | '/login' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/users' | '/login' | '/'
  id:
    | '__root__'
    | '/_appLayout'
    | '/_authLayout'
    | '/_appLayout/users'
    | '/_authLayout/login'
    | '/_appLayout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authLayout': {
      id: '/_authLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_appLayout': {
      id: '/_appLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_appLayout/': {
      id: '/_appLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppLayoutIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_authLayout/login': {
      id: '/_authLayout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLayoutLoginRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/_appLayout/users': {
      id: '/_appLayout/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AppLayoutUsersRouteImport
      parentRoute: typeof AppLayoutRoute
    }
  }
}

interface AppLayoutRouteChildren {
  AppLayoutUsersRoute: typeof AppLayoutUsersRoute
  AppLayoutIndexRoute: typeof AppLayoutIndexRoute
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppLayoutUsersRoute: AppLayoutUsersRoute,
  AppLayoutIndexRoute: AppLayoutIndexRoute,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

interface AuthLayoutRouteChildren {
  AuthLayoutLoginRoute: typeof AuthLayoutLoginRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutLoginRoute: AuthLayoutLoginRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppLayoutRoute: AppLayoutRouteWithChildren,
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
